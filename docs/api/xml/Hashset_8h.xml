<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Hashset_8h" kind="file" language="C++">
    <compoundname>Hashset.h</compoundname>
    <includes refid="Common_8h" local="yes">Common.h</includes>
    <includes refid="Vector_8h" local="yes">Vector.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>ErrorHandler.h</label>
        <link refid="ErrorHandler_8h"/>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>Common.h</label>
        <link refid="Common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Vector.h</label>
        <link refid="Vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>include/Shroon/Utils/Hashset.h</label>
        <link refid="Hashset_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structSUTLHashset" prot="public">SUTLHashset</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" prot="public" static="no">
        <name>SUTL_HASHSET_BUCKET_COUNT</name>
        <initializer>32</initializer>
        <briefdescription>
<para>The number of buckets a <computeroutput><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref></computeroutput> will have. If it is less than or equal to 0 then it is set to 32 which is also the default value if it is not set. </para>
        </briefdescription>
        <detaileddescription>
<para>More buckets will decrease search time but data will be fragmented across locations in memory. This might cause cache misses and hence slow down accessing the entries.</para>
<para>Less buckets will increase search time but data will be less fragmented across locations in memory. This will decrease cache misses and hence accessing the entries won&apos;t take much time.</para>
<para>Choose this value according to your use case. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="50" column="13" bodyfile="include/Shroon/Utils/Hashset.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashset_1ga7fa595be869b590e5bb3ccf23aaf58a5" prot="public" static="no">
        <name>SUTLHashsetNew</name>
        <param><defname>tk</defname></param>
        <param><defname>hash</defname></param>
        <param><defname>cmp</defname></param>
        <initializer><ref refid="group__Internal_1gafbaabac20c55b40b408db84f4f14e15d" kindref="member">SUTL_InternalHashsetNew</ref>(sizeof(tk), hash, cmp)</initializer>
        <briefdescription>
<para>Creates a new <computeroutput><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref></computeroutput> with key type as <computeroutput>tk</computeroutput>, key hash function as <computeroutput>hash</computeroutput> and key compare function as <computeroutput>cmp</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type for the hashmap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>A function of the signature <computeroutput>size_t(const void *)</computeroutput> that hashes <computeroutput>tk</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp</parametername>
</parameternamelist>
<parameterdescription>
<para>A function of signature <computeroutput>int(const void *, const void *)</computeroutput> that compares two <computeroutput>tk</computeroutput> s for equality. (Similar to the <computeroutput>==</computeroutput> operator)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput><ref refid="structSUTLHashmap" kindref="compound">SUTLHashmap</ref></computeroutput> created according to the parameters given. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="103" column="9" bodyfile="include/Shroon/Utils/Hashset.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashset_1ga28c551ad7ac5669c9391a1ad2dff886b" prot="public" static="no">
        <name>SUTLHashsetFree</name>
        <param><defname>hs</defname></param>
        <initializer><ref refid="group__Internal_1ga09c7e73f38e4a49ec289ae9bb9dccf22" kindref="member">SUTL_InternalHashsetFree</ref>(&amp;hs)</initializer>
        <briefdescription>
<para>Frees a <computeroutput><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref></computeroutput> which was created using <computeroutput>SUTLHashsetNew</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hs</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref></computeroutput> to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="110" column="9" bodyfile="include/Shroon/Utils/Hashset.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashset_1gac9afbfba5b8b81076ee2dcc9f99f7a3a" prot="public" static="no">
        <name>SUTLHashsetGet</name>
        <param><defname>tk</defname></param>
        <param><defname>hs</defname></param>
        <param><defname>k</defname></param>
        <initializer>(*(tk *)hs.ParamK = k, (tk *)<ref refid="group__Internal_1gabccfdb8686a25da98498c443d1917ff7" kindref="member">SUTL_InternalHashsetGet</ref>(&amp;hs))</initializer>
        <briefdescription>
<para>Gets entry with key <computeroutput>k</computeroutput> in <computeroutput>hs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type of <computeroutput>hs</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hs</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashset to get from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to search for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput>tk *</computeroutput> that points to the required entry. If <computeroutput>k</computeroutput> doesn&apos;t exist in <computeroutput>hs</computeroutput> then it is <computeroutput>NULL</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="122" column="9" bodyfile="include/Shroon/Utils/Hashset.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashset_1gaf9ae453af7915f01ddb61fe3bfbf4c41" prot="public" static="no">
        <name>SUTLHashsetInsert</name>
        <param><defname>tk</defname></param>
        <param><defname>hs</defname></param>
        <param><defname>k</defname></param>
        <initializer>(*(tk *)hs.ParamK = k, (tk *)<ref refid="group__Internal_1ga768df52259019e1a8a75ebf71d80298a" kindref="member">SUTL_InternalHashsetInsert</ref>(&amp;hs))</initializer>
        <briefdescription>
<para>Inserts an entry with key <computeroutput>k</computeroutput> in <computeroutput>hs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type of <computeroutput>hs</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hs</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashset to insert to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to insert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput>tk *</computeroutput> that points to the inserted entry. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="133" column="9" bodyfile="include/Shroon/Utils/Hashset.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashset_1ga52aafb9cc020a39cc2dbf400e6f9126c" prot="public" static="no">
        <name>SUTLHashsetErase</name>
        <param><defname>tk</defname></param>
        <param><defname>hs</defname></param>
        <param><defname>k</defname></param>
        <initializer>(*(tk *)hs.ParamK = k, <ref refid="group__Internal_1ga355752ded9d402929d3cdccfcd5ca94e" kindref="member">SUTL_InternalHashsetErase</ref>(&amp;hs))</initializer>
        <briefdescription>
<para>Erases an entry with key <computeroutput>k</computeroutput> in <computeroutput>hs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type of <computeroutput>hs</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hs</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashset to erase from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the entry to erase. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="142" column="9" bodyfile="include/Shroon/Utils/Hashset.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashset_1gaca3737f214d8de94a00e7cd7dcfd6784" prot="public" static="no">
        <name>SUTLHashsetEach</name>
        <param><defname>tk</defname></param>
        <param><defname>hs</defname></param>
        <param><defname>name</defname></param>
        <param><defname>expr</defname></param>
        <initializer>    {\
        size_t i, j;\
        for (i = 0; i &lt; <ref refid="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" kindref="member">SUTL_HASHSET_BUCKET_COUNT</ref>; i++)\
        {\
            for (j = 0; j &lt; <ref refid="group__Vector_1gaa3cc5bdcc6ded013a2ff14cb60baa8af" kindref="member">SUTLVectorSize</ref>(hs.Keys[i]) / hs.KeySize; j++)\
            {\
                tk * name = ((tk *)hs.Keys[i] + j);\
                expr\
            }\
        }\
    }</initializer>
        <briefdescription>
<para>Executes <computeroutput>expr</computeroutput> for every entry in <computeroutput>hs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type of <computeroutput>hs</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hs</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashset to iterate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix for current entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>The code block to execute for every entry. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="152" column="9" bodyfile="include/Shroon/Utils/Hashset.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__Hashset_1ga2f886327776090cdf38edf73bf3069b1" prot="public" static="no">
        <type>struct <ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref></type>
        <definition>typedef struct SUTLHashset SUTLHashset</definition>
        <argsstring></argsstring>
        <name>SUTLHashset</name>
        <briefdescription>
<para>It contains the state of a particular hashset instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="90" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__Internal_1gafbaabac20c55b40b408db84f4f14e15d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref></type>
        <definition>SUTLHashset SUTL_InternalHashsetNew</definition>
        <argsstring>(size_t keysize, size_t(*hash)(const void *), int(*keycomp)(const void *, const void *))</argsstring>
        <name>SUTL_InternalHashsetNew</name>
        <param>
          <type>size_t</type>
          <declname>keysize</declname>
        </param>
        <param>
          <type>size_t(*)(const void *)</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>int(*)(const void *, const void *)</type>
          <declname>keycomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="172" column="13" declfile="include/Shroon/Utils/Hashset.h" declline="172" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__Internal_1ga09c7e73f38e4a49ec289ae9bb9dccf22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SUTL_InternalHashsetFree</definition>
        <argsstring>(SUTLHashset *hs)</argsstring>
        <name>SUTL_InternalHashsetFree</name>
        <param>
          <type><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref> *</type>
          <declname>hs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="173" column="6" declfile="include/Shroon/Utils/Hashset.h" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Internal_1ga768df52259019e1a8a75ebf71d80298a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SUTL_InternalHashsetInsert</definition>
        <argsstring>(SUTLHashset *hs)</argsstring>
        <name>SUTL_InternalHashsetInsert</name>
        <param>
          <type><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref> *</type>
          <declname>hs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="174" column="7" declfile="include/Shroon/Utils/Hashset.h" declline="174" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__Internal_1ga355752ded9d402929d3cdccfcd5ca94e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SUTL_InternalHashsetErase</definition>
        <argsstring>(SUTLHashset *hs)</argsstring>
        <name>SUTL_InternalHashsetErase</name>
        <param>
          <type><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref> *</type>
          <declname>hs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="175" column="6" declfile="include/Shroon/Utils/Hashset.h" declline="175" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Internal_1gabccfdb8686a25da98498c443d1917ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SUTL_InternalHashsetGet</definition>
        <argsstring>(SUTLHashset *hs)</argsstring>
        <name>SUTL_InternalHashsetGet</name>
        <param>
          <type><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref> *</type>
          <declname>hs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashset.h" line="176" column="7" declfile="include/Shroon/Utils/Hashset.h" declline="176" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2021<sp/>Saroj<sp/>Kumar.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SUTL_HASHSET_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUTL_HASHSET_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Common_8h" kindref="compound">Common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Vector_8h" kindref="compound">Vector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>This<sp/>must<sp/>be<sp/>same<sp/>for<sp/>all<sp/>source<sp/>files<sp/>that<sp/>pass</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>SUTLHashset<sp/>around.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SUTL_HASHSET_BUCKET_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>SUTL_HASHSET_BUCKET_COUNT<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structSUTLHashset" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61" refid="group__Internal_1gadd760c31d520b44c6a7c19e587308b07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__Internal_1gadd760c31d520b44c6a7c19e587308b07" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[<ref refid="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" kindref="member">SUTL_HASHSET_BUCKET_COUNT</ref>];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__Internal_1gaab3c83e33018b24482bba521bd70dcb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>size_t(<sp/>*<sp/><ref refid="group__Internal_1gaab3c83e33018b24482bba521bd70dcb1" kindref="member">Hash</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="group__Internal_1ga8c5fd1b486486dd15e0208ef3b233344" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int(<sp/>*<sp/><ref refid="group__Internal_1ga8c5fd1b486486dd15e0208ef3b233344" kindref="member">KeyComp</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><ref refid="group__Hashset_1ga2f886327776090cdf38edf73bf3069b1" kindref="member">SUTLHashset</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="group__Hashset_1ga7fa595be869b590e5bb3ccf23aaf58a5" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLHashsetNew(tk,<sp/>hash,<sp/>cmp)<sp/><sp/><sp/><sp/><sp/><sp/>SUTL_InternalHashsetNew(sizeof(tk),<sp/>hash,<sp/>cmp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__Hashset_1ga28c551ad7ac5669c9391a1ad2dff886b" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLHashsetFree(hs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTL_InternalHashsetFree(&amp;hs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group__Hashset_1gac9afbfba5b8b81076ee2dcc9f99f7a3a" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLHashsetGet(tk,<sp/>hs,<sp/>k)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(tk<sp/>*)hs.ParamK<sp/>=<sp/>k,<sp/>(tk<sp/>*)SUTL_InternalHashsetGet(&amp;hs))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="group__Hashset_1gaf9ae453af7915f01ddb61fe3bfbf4c41" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLHashsetInsert(tk,<sp/>hs,<sp/>k)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(tk<sp/>*)hs.ParamK<sp/>=<sp/>k,<sp/>(tk<sp/>*)SUTL_InternalHashsetInsert(&amp;hs))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group__Hashset_1ga52aafb9cc020a39cc2dbf400e6f9126c" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLHashsetErase(tk,<sp/>hs,<sp/>k)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(tk<sp/>*)hs.ParamK<sp/>=<sp/>k,<sp/>SUTL_InternalHashsetErase(&amp;hs))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="group__Hashset_1gaca3737f214d8de94a00e7cd7dcfd6784" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLHashsetEach(tk,<sp/>hs,<sp/>name,<sp/>expr)<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>i,<sp/>j;\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SUTL_HASHSET_BUCKET_COUNT;<sp/>i++)\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>SUTLVectorSize(hs.Keys[i])<sp/>/<sp/>hs.KeySize;<sp/>j++)\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tk<sp/>*<sp/>name<sp/>=<sp/>((tk<sp/>*)hs.Keys[i]<sp/>+<sp/>j);\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/><ref refid="group__Internal_1gafbaabac20c55b40b408db84f4f14e15d" kindref="member">SUTL_InternalHashsetNew</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(<sp/>*<sp/>hash)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(<sp/>*<sp/>keycomp)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__Internal_1ga09c7e73f38e4a49ec289ae9bb9dccf22" kindref="member">SUTL_InternalHashsetFree</ref>(<ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>*<sp/>hs);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__Internal_1ga768df52259019e1a8a75ebf71d80298a" kindref="member">SUTL_InternalHashsetInsert</ref>(<ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>*<sp/>hs);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__Internal_1ga355752ded9d402929d3cdccfcd5ca94e" kindref="member">SUTL_InternalHashsetErase</ref>(<ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>*<sp/>hs);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__Internal_1gabccfdb8686a25da98498c443d1917ff7" kindref="member">SUTL_InternalHashsetGet</ref>(<ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>*<sp/>hs);</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor">#ifdef<sp/>SUTL_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/><ref refid="group__Internal_1gafbaabac20c55b40b408db84f4f14e15d" kindref="member">SUTL_InternalHashsetNew</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(<sp/>*<sp/>hash)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(<sp/>*<sp/>keycomp)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>hs;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Initialize<sp/>the<sp/>members<sp/>of<sp/>`hs`.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs.<ref refid="group__Internal_1gadd760c31d520b44c6a7c19e587308b07" kindref="member">Size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs.<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref><sp/>=<sp/>keysize;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs.<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref><sp/>=<sp/><ref refid="group__Vector_1gabeab74fc632a6cfdb4c07944cb5aa842" kindref="member">SUTLVectorNew</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs.<ref refid="group__Internal_1gaab3c83e33018b24482bba521bd70dcb1" kindref="member">Hash</ref><sp/>=<sp/>hash;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs.<ref refid="group__Internal_1ga8c5fd1b486486dd15e0208ef3b233344" kindref="member">KeyComp</ref><sp/>=<sp/>keycomp;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Allocate<sp/>enough<sp/>memory<sp/>to<sp/>store<sp/>1<sp/>key<sp/>in<sp/>`ParamK`.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__Vector_1ga9408fda84a35c45b047a7af993a27e7b" kindref="member">SUTLVectorResize</ref>(hs.<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>,<sp/>hs.<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Initialize<sp/>all<sp/>the<sp/>buckets.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" kindref="member">SUTL_HASHSET_BUCKET_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs.<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[i]<sp/>=<sp/><ref refid="group__Vector_1gabeab74fc632a6cfdb4c07944cb5aa842" kindref="member">SUTLVectorNew</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hs;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__Internal_1ga09c7e73f38e4a49ec289ae9bb9dccf22" kindref="member">SUTL_InternalHashsetFree</ref>(<ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>*<sp/>hs)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Free<sp/>all<sp/>the<sp/>buckets.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" kindref="member">SUTL_HASHSET_BUCKET_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__Vector_1ga279b90bde3ad8670025311d68c9d20b0" kindref="member">SUTLVectorFree</ref>(hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[i]);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Free<sp/>the<sp/>memory<sp/>allocated<sp/>for<sp/>parameter<sp/>variable.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__Vector_1ga279b90bde3ad8670025311d68c9d20b0" kindref="member">SUTLVectorFree</ref>(hs-&gt;<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__Internal_1ga768df52259019e1a8a75ebf71d80298a" kindref="member">SUTL_InternalHashsetInsert</ref>(<ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>*<sp/>hs)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Calculate<sp/>the<sp/>index<sp/>of<sp/>the<sp/>key<sp/>stored<sp/>in<sp/>`ParamK`.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>hs-&gt;<ref refid="group__Internal_1gaab3c83e33018b24482bba521bd70dcb1" kindref="member">Hash</ref>(hs-&gt;<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>)<sp/>%<sp/><ref refid="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" kindref="member">SUTL_HASHSET_BUCKET_COUNT</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs-&gt;<ref refid="group__Internal_1gadd760c31d520b44c6a7c19e587308b07" kindref="member">Size</ref>++;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>entry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Check<sp/>if<sp/>the<sp/>entry<sp/>with<sp/>key<sp/>stored<sp/>in<sp/>`ParamK`<sp/>already<sp/>exists.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__Vector_1gaa3cc5bdcc6ded013a2ff14cb60baa8af" kindref="member">SUTLVectorSize</ref>(hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index])<sp/>/<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hs-&gt;<ref refid="group__Internal_1ga8c5fd1b486486dd15e0208ef3b233344" kindref="member">KeyComp</ref>(hs-&gt;<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>,<sp/>hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index]<sp/>+<sp/>i<sp/>*<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Initialize<sp/>`entry`<sp/>to<sp/>the<sp/>entry<sp/>that<sp/>already<sp/>exists.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/>hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index]<sp/>+<sp/>i<sp/>*<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>entry<sp/>already<sp/>exists<sp/>return<sp/>it,<sp/>otherwise<sp/>proceed<sp/>to<sp/>add<sp/>the<sp/>new<sp/>entry.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(entry)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Push<sp/>the<sp/>new<sp/>key<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>bucket<sp/>with<sp/>index<sp/>`index`<sp/>and<sp/>return<sp/>it.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__Vector_1ga5267fe5032e9c8dbe8601b7d7b9bbeb8" kindref="member">SUTLVectorPushN</ref>(hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index],<sp/>hs-&gt;<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>,<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__Internal_1ga355752ded9d402929d3cdccfcd5ca94e" kindref="member">SUTL_InternalHashsetErase</ref>(<ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>*<sp/>hs)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Calculate<sp/>the<sp/>index<sp/>of<sp/>the<sp/>key<sp/>stored<sp/>in<sp/>`ParamK`.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>hs-&gt;<ref refid="group__Internal_1gaab3c83e33018b24482bba521bd70dcb1" kindref="member">Hash</ref>(hs-&gt;<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>)<sp/>%<sp/><ref refid="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" kindref="member">SUTL_HASHSET_BUCKET_COUNT</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Search<sp/>the<sp/>bucket<sp/>with<sp/>index<sp/>`index`<sp/>for<sp/>the<sp/>key<sp/>stored<sp/>in<sp/>`ParamK`.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__Vector_1gaa3cc5bdcc6ded013a2ff14cb60baa8af" kindref="member">SUTLVectorSize</ref>(hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index]);<sp/>i++)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hs-&gt;<ref refid="group__Internal_1ga8c5fd1b486486dd15e0208ef3b233344" kindref="member">KeyComp</ref>(hs-&gt;<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>,<sp/>hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index]<sp/>+<sp/>i<sp/>*<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Erase<sp/>the<sp/>key<sp/>from<sp/>the<sp/>bucket.</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__Vector_1ga4c83deb0b4f089f7b8d36a4a668a513d" kindref="member">SUTLVectorEraseN</ref>(hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index],<sp/>i<sp/>*<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>,<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs-&gt;<ref refid="group__Internal_1gadd760c31d520b44c6a7c19e587308b07" kindref="member">Size</ref>--;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__Internal_1gabccfdb8686a25da98498c443d1917ff7" kindref="member">SUTL_InternalHashsetGet</ref>(<ref refid="structSUTLHashset" kindref="compound">SUTLHashset</ref><sp/>*<sp/>hs)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Calculate<sp/>the<sp/>index<sp/>of<sp/>the<sp/>key<sp/>stored<sp/>in<sp/>`ParamK`.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>hs-&gt;<ref refid="group__Internal_1gaab3c83e33018b24482bba521bd70dcb1" kindref="member">Hash</ref>(hs-&gt;<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>)<sp/>%<sp/><ref refid="group__Hashset_1ga51ae51e267e34395ed759e2e80f2bc9a" kindref="member">SUTL_HASHSET_BUCKET_COUNT</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Search<sp/>the<sp/>bucket<sp/>with<sp/>index<sp/>`index`<sp/>for<sp/>the<sp/>key<sp/>stored<sp/>in<sp/>`ParamK`.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__Vector_1gaa3cc5bdcc6ded013a2ff14cb60baa8af" kindref="member">SUTLVectorSize</ref>(hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index])<sp/>/<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hs-&gt;<ref refid="group__Internal_1ga8c5fd1b486486dd15e0208ef3b233344" kindref="member">KeyComp</ref>(hs-&gt;<ref refid="group__Internal_1ga4041241c97d530d31ccbcbd8a9bb0ee7" kindref="member">ParamK</ref>,<sp/>hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index]<sp/>+<sp/>i<sp/>*<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>))</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Return<sp/>the<sp/>value.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hs-&gt;<ref refid="group__Internal_1ga36972b8b605e5edd2a790f9640be19d7" kindref="member">Keys</ref>[index]<sp/>+<sp/>i<sp/>*<sp/>hs-&gt;<ref refid="group__Internal_1gaf1bd1219cdeadf5dcf0a69e99697d7be" kindref="member">KeySize</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>search<sp/>fails<sp/>then<sp/>`NULL`<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/Shroon/Utils/Hashset.h"/>
  </compounddef>
</doxygen>
