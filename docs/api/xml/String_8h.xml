<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="String_8h" kind="file" language="C++">
    <compoundname>String.h</compoundname>
    <includes refid="Common_8h" local="yes">Common.h</includes>
    <includes refid="Vector_8h" local="yes">Vector.h</includes>
    <includedby refid="HashUtils_8h" local="yes">include/Shroon/Utils/HashUtils.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>ErrorHandler.h</label>
        <link refid="ErrorHandler_8h"/>
      </node>
      <node id="1">
        <label>include/Shroon/Utils/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>Common.h</label>
        <link refid="Common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Vector.h</label>
        <link refid="Vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/Shroon/Utils/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/Shroon/Utils/HashUtils.h</label>
        <link refid="HashUtils_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__String_1gaae1276e9a49794d037ce5bd9458c9e34" prot="public" static="no">
        <name>SUTLStringSize</name>
        <param><defname>str</defname></param>
        <initializer><ref refid="group__Vector_1gaa3cc5bdcc6ded013a2ff14cb60baa8af" kindref="member">SUTLVectorSize</ref>(str)</initializer>
        <briefdescription>
<para>Gets the size of <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to get the size of. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="38" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1gad7d6b71b147786fd740f0f2b10278b4e" prot="public" static="no">
        <name>SUTLStringCapacity</name>
        <param><defname>str</defname></param>
        <initializer><ref refid="group__Vector_1ga064c00c2c55489b35015b003f39229d6" kindref="member">SUTLVectorCapacity</ref>(str)</initializer>
        <briefdescription>
<para>Gets the capacity of <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to get the capacity of. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="45" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga7cbd917333d6b38accf0a504df92ce86" prot="public" static="no">
        <name>SUTLStringNew</name>
        <param></param>
        <initializer><ref refid="group__Vector_1gabeab74fc632a6cfdb4c07944cb5aa842" kindref="member">SUTLVectorNew</ref>(char)</initializer>
        <briefdescription>
<para>Creates a new string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <computeroutput>char *</computeroutput> which points to index 0 in the string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="52" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1gaf51b53053e4fe7034e18362e795aaaf5" prot="public" static="no">
        <name>SUTLStringFree</name>
        <param><defname>str</defname></param>
        <initializer><ref refid="group__Vector_1ga279b90bde3ad8670025311d68c9d20b0" kindref="member">SUTLVectorFree</ref>(str)</initializer>
        <briefdescription>
<para>Frees a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to free. This must be a pointer returned from <computeroutput>SUTLVectorNew</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="59" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga57aaa81e7f1ca4e3373f4f3754ec158c" prot="public" static="no">
        <name>SUTLStringReserve</name>
        <param><defname>str</defname></param>
        <param><defname>size</defname></param>
        <initializer><ref refid="group__Vector_1gaee3ca7e23b775c3e7e89e66386b49e69" kindref="member">SUTLVectorReserve</ref>(str, size)</initializer>
        <briefdescription>
<para>Reserves memory for <computeroutput>size</computeroutput> characters in <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to reserve memory in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to reserve memory for. Must be greater than or equal to size of <computeroutput>str</computeroutput>, otherwise nothing is changed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="68" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga3abc5c04144a71c1fd057d949d266ed2" prot="public" static="no">
        <name>SUTLStringResize</name>
        <param><defname>str</defname></param>
        <param><defname>size</defname></param>
        <initializer><ref refid="group__Vector_1ga9408fda84a35c45b047a7af993a27e7b" kindref="member">SUTLVectorResize</ref>(str, size)</initializer>
        <briefdescription>
<para>Resizes <computeroutput>str</computeroutput> to <computeroutput>size</computeroutput> characters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to resize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new size of the string. Doesn&apos;t affect the capacity of string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="76" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1gadb11cb88824a6f06c595085284b928ad" prot="public" static="no">
        <name>SUTLStringAppendC</name>
        <param><defname>str</defname></param>
        <param><defname>c</defname></param>
        <initializer><ref refid="group__Vector_1gaaf6809c41fbc904c2de7b3fe59b20acf" kindref="member">SUTLVectorPush</ref>(str, c)</initializer>
        <briefdescription>
<para>Appends <computeroutput>c</computeroutput> to <computeroutput>str</computeroutput>. Synonymous to <computeroutput>SUTLStringInsert</computeroutput> with <computeroutput>at</computeroutput> as size of <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append <computeroutput>c</computeroutput> to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to append to <computeroutput>str</computeroutput>. Must be an lvalue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the inserted character. If insertion failed, it is <computeroutput>NULL</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="86" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga8fcc3717d127b141f3bdee7e8fd76a99" prot="public" static="no">
        <name>SUTLStringAppendP</name>
        <param><defname>str</defname></param>
        <param><defname>ptr</defname></param>
        <initializer><ref refid="group__Vector_1ga5267fe5032e9c8dbe8601b7d7b9bbeb8" kindref="member">SUTLVectorPushN</ref>(str, ptr, <ref refid="Common_8h_1a4a42ee0d16198c655ab6bcfb02831c8b" kindref="member">SHRN_STRLEN</ref>(ptr))</initializer>
        <briefdescription>
<para>Appends null-terminated string <computeroutput>ptr</computeroutput> to <computeroutput>str</computeroutput>. Synonymous to <computeroutput>SUTLStringInsertN</computeroutput> with <computeroutput>at</computeroutput> as size of <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append <computeroutput>ptr</computeroutput> to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Null-terminated string which will be appended.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the first inserted character. If insertion failed, it is <computeroutput>NULL</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="97" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1gaf3b2c3dfae0c92db36afb64f615058a7" prot="public" static="no">
        <name>SUTLStringAppendN</name>
        <param><defname>str</defname></param>
        <param><defname>ptr</defname></param>
        <param><defname>count</defname></param>
        <initializer><ref refid="group__Vector_1ga5267fe5032e9c8dbe8601b7d7b9bbeb8" kindref="member">SUTLVectorPushN</ref>(str, ptr, count)</initializer>
        <briefdescription>
<para>Appends <computeroutput>count</computeroutput> characters from <computeroutput>ptr</computeroutput> to <computeroutput>str</computeroutput>. Synonymous to <computeroutput>SUTLStringInsertN</computeroutput> with <computeroutput>at</computeroutput> as size of <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append <computeroutput>ptr</computeroutput> to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the characters which will be appended. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to append.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the first inserted character. If insertion failed, it is <computeroutput>NULL</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="109" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga423096905d12ddf68b3f37d86041c2dd" prot="public" static="no">
        <name>SUTLStringPop</name>
        <param><defname>str</defname></param>
        <initializer><ref refid="group__Vector_1gaa8b7538003a48a9378ca41f7ff4d9b99" kindref="member">SUTLVectorPop</ref>(str)</initializer>
        <briefdescription>
<para>Pops a character from the back of <computeroutput>str</computeroutput>. Synonymous to SUTLStringErase with <computeroutput>at</computeroutput> as size of <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to pop a character from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="117" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1gae88cab309120a728cfdd01a4c4190045" prot="public" static="no">
        <name>SUTLStringPopN</name>
        <param><defname>str</defname></param>
        <param><defname>count</defname></param>
        <initializer><ref refid="group__Vector_1ga9d91ac544f3bb384299364a26bbf4f6e" kindref="member">SUTLVectorPopN</ref>(str, count)</initializer>
        <briefdescription>
<para>Pops <computeroutput>count</computeroutput> characters from the back of <computeroutput>str</computeroutput>. Synonymous to <computeroutput>SUTLStringEraseN</computeroutput> with <computeroutput>at</computeroutput> as size of <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to pop characters from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to pop. Must be less than or equal to size of <computeroutput>str</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="126" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga724a65f93e00bf579e1af44a872b5e4d" prot="public" static="no">
        <name>SUTLStringInsertC</name>
        <param><defname>str</defname></param>
        <param><defname>at</defname></param>
        <param><defname>c</defname></param>
        <initializer><ref refid="group__Vector_1gab397c31e071773ac38692d899ec15024" kindref="member">SUTLVectorInsert</ref>(str, at, c)</initializer>
        <briefdescription>
<para>Inserts <computeroutput>c</computeroutput> at index <computeroutput>at</computeroutput> into <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to insert <computeroutput>c</computeroutput> in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to insert the character at. This will be the index of the new character. Must be less than or equal to the size of <computeroutput>str</computeroutput>, otherwise the insertion fails and <computeroutput>NULL</computeroutput> is returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to insert inside <computeroutput>str</computeroutput>. Must be an lvalue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the inserted character. If insertion failed, it is <computeroutput>NULL</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="138" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga651313bb79d918c8bfa1db65d3913206" prot="public" static="no">
        <name>SUTLStringInsertP</name>
        <param><defname>str</defname></param>
        <param><defname>at</defname></param>
        <param><defname>ptr</defname></param>
        <initializer><ref refid="group__Vector_1ga5f5a4c0c864fe78a112ca91117c6586d" kindref="member">SUTLVectorInsertN</ref>(str, at, ptr, <ref refid="Common_8h_1a4a42ee0d16198c655ab6bcfb02831c8b" kindref="member">SHRN_STRLEN</ref>(ptr))</initializer>
        <briefdescription>
<para>Inserts null-terminated string <computeroutput>ptr</computeroutput> at index <computeroutput>at</computeroutput> into <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to insert <computeroutput>ptr</computeroutput> in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to insert the characters at. This will be the index of the first new character. Must be less than or equal to the size of <computeroutput>str</computeroutput>, otherwise the insertion fails and <computeroutput>NULL</computeroutput> is returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Null-terminated string which will be inserted.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the first inserted character. If insertion failed, it is <computeroutput>NULL</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="151" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1gae62e14f4ce3ca50aa134f902612a8c9f" prot="public" static="no">
        <name>SUTLStringInsertN</name>
        <param><defname>str</defname></param>
        <param><defname>at</defname></param>
        <param><defname>ptr</defname></param>
        <param><defname>count</defname></param>
        <initializer><ref refid="group__Vector_1ga5f5a4c0c864fe78a112ca91117c6586d" kindref="member">SUTLVectorInsertN</ref>(str, at, ptr, count)</initializer>
        <briefdescription>
<para>Inserts <computeroutput>count</computeroutput> characters from <computeroutput>ptr</computeroutput> at index <computeroutput>at</computeroutput> into <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to insert <computeroutput>ptr</computeroutput> in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to insert the characters at. This will be the index of the first new character. Must be less than or equal to the size of <computeroutput>str</computeroutput>, otherwise the insertion fails and <computeroutput>NULL</computeroutput> is returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the characters which will be inserted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to insert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the first inserted character. If insertion failed, it is <computeroutput>NULL</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="165" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga458525855640921a2aaf71b3e96f9dbc" prot="public" static="no">
        <name>SUTLStringErase</name>
        <param><defname>str</defname></param>
        <param><defname>at</defname></param>
        <initializer><ref refid="group__Vector_1ga27045ec866ed199548ef1ead7a4fe142" kindref="member">SUTLVectorErase</ref>(str, at)</initializer>
        <briefdescription>
<para>Erases character at index <computeroutput>at</computeroutput> in <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to erase character from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of character to erase. Must be less than the size of <computeroutput>str</computeroutput>, otherwise nothing is changed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="174" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1ga85ba52b90d850373ffe90c64ecde72a3" prot="public" static="no">
        <name>SUTLStringEraseN</name>
        <param><defname>str</defname></param>
        <param><defname>at</defname></param>
        <param><defname>count</defname></param>
        <initializer><ref refid="group__Vector_1ga4c83deb0b4f089f7b8d36a4a668a513d" kindref="member">SUTLVectorEraseN</ref>(str, at, count)</initializer>
        <briefdescription>
<para>Erases <computeroutput>count</computeroutput> characters starting from <computeroutput>at</computeroutput> in <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to erase character from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of first character to erase. Must be less than <computeroutput>size of str - count</computeroutput>, otherwise nothing is changed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to erase. Must be less than or equal to size of <computeroutput>str</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="184" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1gac88ebf36631166d51dc2fcfdb86b9f21" prot="public" static="no">
        <name>SUTLStringSlice</name>
        <param><defname>str</defname></param>
        <param><defname>at</defname></param>
        <param><defname>size</defname></param>
        <initializer><ref refid="group__Internal_1ga7eccfa58bd7a297fdd9197c87fd73ce3" kindref="member">SUTL_InternalStringSlice</ref>(str, at, size)</initializer>
        <briefdescription>
<para>Creates a new string of size <computeroutput>size</computeroutput> from index <computeroutput>at</computeroutput> of <computeroutput>str</computeroutput> upto <computeroutput>size</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to create the new string from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>The index from where <computeroutput>str</computeroutput> will be copied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to copy from <computeroutput>str</computeroutput>. If this is 0 then characters upto the end of <computeroutput>str</computeroutput> are copied.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new string of size <computeroutput>size</computeroutput> with characters from index <computeroutput>at</computeroutput> of <computeroutput>str</computeroutput> upto <computeroutput>size</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="196" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__String_1gab4205984272219441d23027f9d01f112" prot="public" static="no">
        <name>SUTLStringEach</name>
        <param><defname>str</defname></param>
        <param><defname>name</defname></param>
        <param><defname>expr</defname></param>
        <initializer>    {\
        size_t i = 0;\
        for (i = 0; i &lt; <ref refid="group__Vector_1gaa3cc5bdcc6ded013a2ff14cb60baa8af" kindref="member">SUTLVectorSize</ref>(v); i++)\
        {\
            char * name = v + i;\
            expr\
        }\
    }</initializer>
        <briefdescription>
<para>Executes <computeroutput>expr</computeroutput> for each character of <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to iterate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable in which current character will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>The code block to execute for each character. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="205" column="9" bodyfile="include/Shroon/Utils/String.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__String_1gaee11319e0656cc52c3e85c02426acf64" prot="public" static="no">
        <type>char *</type>
        <definition>typedef char* SUTLString</definition>
        <argsstring></argsstring>
        <name>SUTLString</name>
        <briefdescription>
<para>This is basically a vector of <computeroutput>char</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="31" column="15" bodyfile="include/Shroon/Utils/String.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__Internal_1ga7eccfa58bd7a297fdd9197c87fd73ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" kindref="member">SUTLString</ref></type>
        <definition>SUTLString SUTL_InternalStringSlice</definition>
        <argsstring>(SUTLString str, size_t at, size_t size)</argsstring>
        <name>SUTL_InternalStringSlice</name>
        <param>
          <type><ref refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" kindref="member">SUTLString</ref></type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>at</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/String.h" line="222" column="12" declfile="include/Shroon/Utils/String.h" declline="222" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2021<sp/>Saroj<sp/>Kumar.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SUTL_STRING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUTL_STRING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Common_8h" kindref="compound">Common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Vector_8h" kindref="compound">Vector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" kindref="member">SUTLString</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__String_1gaae1276e9a49794d037ce5bd9458c9e34" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringSize(str)<sp/><sp/><sp/><sp/><sp/>SUTLVectorSize(str)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__String_1gad7d6b71b147786fd740f0f2b10278b4e" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringCapacity(str)<sp/>SUTLVectorCapacity(str)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__String_1ga7cbd917333d6b38accf0a504df92ce86" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringNew()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorNew(char)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__String_1gaf51b53053e4fe7034e18362e795aaaf5" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringFree(str)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorFree(str)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__String_1ga57aaa81e7f1ca4e3373f4f3754ec158c" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringReserve(str,<sp/>size)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorReserve(str,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__String_1ga3abc5c04144a71c1fd057d949d266ed2" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringResize(str,<sp/>size)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorResize(str,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="group__String_1gadb11cb88824a6f06c595085284b928ad" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringAppendC(str,<sp/>c)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorPush(str,<sp/>c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__String_1ga8fcc3717d127b141f3bdee7e8fd76a99" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringAppendP(str,<sp/>ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorPushN(str,<sp/>ptr,<sp/>SHRN_STRLEN(ptr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="group__String_1gaf3b2c3dfae0c92db36afb64f615058a7" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringAppendN(str,<sp/>ptr,<sp/>count)<sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorPushN(str,<sp/>ptr,<sp/>count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="group__String_1ga423096905d12ddf68b3f37d86041c2dd" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringPop(str)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorPop(str)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="group__String_1gae88cab309120a728cfdd01a4c4190045" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringPopN(str,<sp/>count)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorPopN(str,<sp/>count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="group__String_1ga724a65f93e00bf579e1af44a872b5e4d" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringInsertC(str,<sp/>at,<sp/>c)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorInsert(str,<sp/>at,<sp/>c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group__String_1ga651313bb79d918c8bfa1db65d3913206" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringInsertP(str,<sp/>at,<sp/>ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorInsertN(str,<sp/>at,<sp/>ptr,<sp/>SHRN_STRLEN(ptr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="group__String_1gae62e14f4ce3ca50aa134f902612a8c9f" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringInsertN(str,<sp/>at,<sp/>ptr,<sp/>count)<sp/><sp/>SUTLVectorInsertN(str,<sp/>at,<sp/>ptr,<sp/>count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="group__String_1ga458525855640921a2aaf71b3e96f9dbc" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringErase(str,<sp/>at)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorErase(str,<sp/>at)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group__String_1ga85ba52b90d850373ffe90c64ecde72a3" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringEraseN(str,<sp/>at,<sp/>count)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUTLVectorEraseN(str,<sp/>at,<sp/>count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="group__String_1gac88ebf36631166d51dc2fcfdb86b9f21" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringSlice(str,<sp/>at,<sp/>size)<sp/>SUTL_InternalStringSlice(str,<sp/>at,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="group__String_1gab4205984272219441d23027f9d01f112" refkind="member"><highlight class="preprocessor">#define<sp/>SUTLStringEach(str,<sp/>name,<sp/>expr)<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>i<sp/>=<sp/>0;\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SUTLVectorSize(v);<sp/>i++)\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*<sp/>name<sp/>=<sp/>v<sp/>+<sp/>i;\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" kindref="member">SUTLString</ref><sp/><ref refid="group__Internal_1ga7eccfa58bd7a297fdd9197c87fd73ce3" kindref="member">SUTL_InternalStringSlice</ref>(<ref refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" kindref="member">SUTLString</ref><sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>at,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor">#ifdef<sp/>SUTL_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" kindref="member">SUTLString</ref><sp/><ref refid="group__Internal_1ga7eccfa58bd7a297fdd9197c87fd73ce3" kindref="member">SUTL_InternalStringSlice</ref>(<ref refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" kindref="member">SUTLString</ref><sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>at,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strSize<sp/>=<sp/><ref refid="group__String_1gaae1276e9a49794d037ce5bd9458c9e34" kindref="member">SUTLStringSize</ref>(str);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(at<sp/>&gt;=<sp/>strSize)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ErrorHandler_8h_1a6599a51289085a4b89fa152c0af3d591" kindref="member">SUTLErrorHandler</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>index<sp/>specified<sp/>for<sp/>slicing<sp/>string.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>size<sp/>?<sp/>size<sp/>:<sp/>strSize<sp/>-<sp/>at;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__String_1gaee11319e0656cc52c3e85c02426acf64" kindref="member">SUTLString</ref><sp/>slice<sp/>=<sp/><ref refid="group__String_1ga7cbd917333d6b38accf0a504df92ce86" kindref="member">SUTLStringNew</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__String_1ga3abc5c04144a71c1fd057d949d266ed2" kindref="member">SUTLStringResize</ref>(slice,<sp/>size);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>at<sp/>+<sp/>size<sp/>&gt;<sp/>strSize<sp/>?<sp/>strSize<sp/>-<sp/>at<sp/>:<sp/>size;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Common_8h_1ae98701da6883fb9a22e5c13a1bf87cfb" kindref="member">SHRN_MEMCPY</ref>(slice,<sp/>str<sp/>+<sp/>at,<sp/>size);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>slice;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/Shroon/Utils/String.h"/>
  </compounddef>
</doxygen>
