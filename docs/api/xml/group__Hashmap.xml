<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__Hashmap" kind="group">
    <compoundname>Hashmap</compoundname>
    <title>Hashmap</title>
    <innerclass refid="structSUTLHashmap" prot="public">SUTLHashmap</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__Hashmap_1gaa45677f2a94818e781a6767211c10153" prot="public" static="no">
        <type>struct <ref refid="structSUTLHashmap" kindref="compound">SUTLHashmap</ref></type>
        <definition>typedef struct SUTLHashmap SUTLHashmap</definition>
        <argsstring></argsstring>
        <name>SUTLHashmap</name>
        <briefdescription>
<para>It contains the state of a particular hashmap instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashmap.h" line="105" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__Hashmap_1ga45c9cec4dcbfc86e40a0f157fb6a4672" prot="public" static="no">
        <name>SUTL_HASHMAP_BUCKET_COUNT</name>
        <initializer>32</initializer>
        <briefdescription>
<para>The number of buckets a <computeroutput><ref refid="structSUTLHashmap" kindref="compound">SUTLHashmap</ref></computeroutput> will have. If it is less than or equal to 0 then it is set to 32 which is also the default value if it is not set. </para>
        </briefdescription>
        <detaileddescription>
<para>More buckets will decrease search time but data will be fragmented across locations in memory. This might cause cache misses and hence slow down accessing the entries.</para>
<para>Less buckets will increase search time but data will be less fragmented across locations in memory. This will decrease cache misses and hence accessing the entries won&apos;t take much time.</para>
<para>Choose this value according to your use case. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashmap.h" line="47" column="13" bodyfile="include/Shroon/Utils/Hashmap.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashmap_1gae57d2d80986e5f18743c816b6374d239" prot="public" static="no">
        <name>SUTLHashmapNew</name>
        <param><defname>tk</defname></param>
        <param><defname>tv</defname></param>
        <param><defname>hash</defname></param>
        <param><defname>cmp</defname></param>
        <initializer><ref refid="group__Internal_1ga838cd0994f3f5e719990dc821f7225bd" kindref="member">SUTL_InternalHashmapNew</ref>(sizeof(tk), sizeof(tv), hash, cmp)</initializer>
        <briefdescription>
<para>Creates a new <computeroutput><ref refid="structSUTLHashmap" kindref="compound">SUTLHashmap</ref></computeroutput> with key type as <computeroutput>tk</computeroutput>,value type as <computeroutput>v</computeroutput>, key hash function as <computeroutput>hash</computeroutput> and key compare function as <computeroutput>cmp</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type for the hashmap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>The value type for the hashmap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>A function of the signature <computeroutput>size_t(const void *)</computeroutput> that hashes <computeroutput>tk</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp</parametername>
</parameternamelist>
<parameterdescription>
<para>A function of signature <computeroutput>int(const void *, const void *)</computeroutput> that compares two <computeroutput>tk</computeroutput> s for equality. (Similar to the <computeroutput>==</computeroutput> operator)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput><ref refid="structSUTLHashmap" kindref="compound">SUTLHashmap</ref></computeroutput> created according to the parameters given. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashmap.h" line="119" column="9" bodyfile="include/Shroon/Utils/Hashmap.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashmap_1ga3c181db26f6215c15740c6f598cf670c" prot="public" static="no">
        <name>SUTLHashmapFree</name>
        <param><defname>hm</defname></param>
        <initializer><ref refid="group__Internal_1gae1f724922eb49605dec643e00fcaf879" kindref="member">SUTL_InternalHashmapFree</ref>(&amp;hm)</initializer>
        <briefdescription>
<para>Frees a <computeroutput><ref refid="structSUTLHashmap" kindref="compound">SUTLHashmap</ref></computeroutput> which was created using <computeroutput>SUTLHashmapNew</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hm</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="structSUTLHashmap" kindref="compound">SUTLHashmap</ref></computeroutput> to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashmap.h" line="126" column="9" bodyfile="include/Shroon/Utils/Hashmap.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashmap_1gab29acab7ea1d2b9e19da9b353756636f" prot="public" static="no">
        <name>SUTLHashmapGet</name>
        <param><defname>tk</defname></param>
        <param><defname>tv</defname></param>
        <param><defname>hm</defname></param>
        <param><defname>k</defname></param>
        <initializer>(*(tk *)hm.ParamK = k, (tv *)<ref refid="group__Internal_1ga58bef1a42620b7fc1e452bc54a1311c6" kindref="member">SUTL_InternalHashmapGet</ref>(&amp;hm))</initializer>
        <briefdescription>
<para>Gets a value assigned to <computeroutput>k</computeroutput> in <computeroutput>hm</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type of <computeroutput>hm</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>The value type of <computeroutput>hm</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hm</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashmap to get from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to search for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput>tv *</computeroutput> that points to the required value. If <computeroutput>k</computeroutput> doesn&apos;t exist in <computeroutput>hm</computeroutput> then it is <computeroutput>NULL</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashmap.h" line="139" column="9" bodyfile="include/Shroon/Utils/Hashmap.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashmap_1gae119d9d923733dad43a31d2e1e90f412" prot="public" static="no">
        <name>SUTLHashmapInsert</name>
        <param><defname>tk</defname></param>
        <param><defname>tv</defname></param>
        <param><defname>hm</defname></param>
        <param><defname>k</defname></param>
        <param><defname>v</defname></param>
        <initializer>(*(tk *)hm.ParamK = k, *(tv *)hm.ParamV = v, (tv *)<ref refid="group__Internal_1ga6633c998f782d19ce1a8e7cf90e9818c" kindref="member">SUTL_InternalHashmapInsert</ref>(&amp;hm))</initializer>
        <briefdescription>
<para>Inserts an entry with key <computeroutput>k</computeroutput> and value <computeroutput>v</computeroutput> in <computeroutput>hm</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type of <computeroutput>hm</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>The value type of <computeroutput>hm</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hm</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashmap to insert to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to insert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to insert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput>tv *</computeroutput> that points to the inserted value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashmap.h" line="152" column="9" bodyfile="include/Shroon/Utils/Hashmap.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashmap_1gad538de6c803e29f121ad114d52793d81" prot="public" static="no">
        <name>SUTLHashmapErase</name>
        <param><defname>tk</defname></param>
        <param><defname>hm</defname></param>
        <param><defname>k</defname></param>
        <initializer>(*(tk *)hm.ParamK = k, <ref refid="group__Internal_1ga534e3f25e4dbeee073debc59e8a615f9" kindref="member">SUTL_InternalHashmapErase</ref>(&amp;hm))</initializer>
        <briefdescription>
<para>Erases an entry with key <computeroutput>k</computeroutput> in <computeroutput>hm</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type of <computeroutput>hm</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hm</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashmap to erase from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the entry to erase. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashmap.h" line="161" column="9" bodyfile="include/Shroon/Utils/Hashmap.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__Hashmap_1ga152bfc9f428630138516d92af96ea628" prot="public" static="no">
        <name>SUTLHashmapEach</name>
        <param><defname>tk</defname></param>
        <param><defname>tv</defname></param>
        <param><defname>hm</defname></param>
        <param><defname>name</defname></param>
        <param><defname>expr</defname></param>
        <initializer>    {\
        size_t i, j;\
        for (i = 0; i &lt; <ref refid="group__Hashmap_1ga45c9cec4dcbfc86e40a0f157fb6a4672" kindref="member">SUTL_HASHMAP_BUCKET_COUNT</ref>; i++)\
        {\
            for (j = 0; j &lt; <ref refid="group__Vector_1gaa3cc5bdcc6ded013a2ff14cb60baa8af" kindref="member">SUTLVectorSize</ref>(hm.Keys[i]) / hm.KeySize; j++)\
            {\
                tk * name##_k = ((tk *)hm.Keys[i] + j);\
                tv * name##_v = ((tv *)hm.Values[i] + j);\
                expr\
            }\
        }\
    }</initializer>
        <briefdescription>
<para>Executes <computeroutput>expr</computeroutput> for every entry in <computeroutput>hm</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tk</parametername>
</parameternamelist>
<parameterdescription>
<para>The key type of <computeroutput>hm</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>The value type of <computeroutput>hm</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hm</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashmap to iterate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix for current entry. Key will have suffix <computeroutput>_k</computeroutput> and value will have suffix <computeroutput>_v</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>The code block to execute for every entry. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/Hashmap.h" line="173" column="9" bodyfile="include/Shroon/Utils/Hashmap.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A hashmap (also called hashtable) implementation. This is similar to the <computeroutput>std::unordered_map</computeroutput> from C++ STL. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
