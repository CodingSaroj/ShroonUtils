<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ErrorHandler_8h" kind="file" language="C++">
    <compoundname>ErrorHandler.h</compoundname>
    <includedby refid="Common_8h" local="yes">include/Shroon/Utils/Common.h</includedby>
    <invincdepgraph>
      <node id="3">
        <label>include/Shroon/Utils/Hashmap.h</label>
        <link refid="Hashmap_8h"/>
      </node>
      <node id="1">
        <label>include/Shroon/Utils/ErrorHandler.h</label>
        <link refid="ErrorHandler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/Shroon/Utils/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/Shroon/Utils/Common.h</label>
        <link refid="Common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/Shroon/Utils/Vector.h</label>
        <link refid="Vector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/Shroon/Utils/HashUtils.h</label>
        <link refid="HashUtils_8h"/>
      </node>
      <node id="5">
        <label>include/Shroon/Utils/Hashset.h</label>
        <link refid="Hashset_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ErrorHandler_8h_1a6599a51289085a4b89fa152c0af3d591" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * SUTLErrorHandler) (const char *)</definition>
        <argsstring>)(const char *)</argsstring>
        <name>SUTLErrorHandler</name>
        <briefdescription>
<para>The function which will handle errors. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, it print errors to <computeroutput>stderr</computeroutput> but if <computeroutput>SUTL_ERROR_HANDLER_CUSTOM</computeroutput> is defined, then this must be defined and set to a custom function otherwise linker errors will occur. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Shroon/Utils/ErrorHandler.h" line="25" column="12" declfile="include/Shroon/Utils/ErrorHandler.h" declline="25" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This file contains the declaration/definition of the error handler function pointer. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SUTL_ERROR_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUTL_ERROR_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor">#if<sp/>defined(SUTL_IMPLEMENTATION)<sp/>&amp;&amp;<sp/>!(defined(SUTL_ERROR_HANDLER_CUSTOM)<sp/>&amp;&amp;<sp/>SUTL_ERROR_HANDLER_CUSTOM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SUTL_InternalErrorHandler(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>void(<sp/>*<sp/><ref refid="ErrorHandler_8h_1a6599a51289085a4b89fa152c0af3d591" kindref="member">SUTLErrorHandler</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>SUTL_InternalErrorHandler;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void(<sp/>*<sp/><ref refid="ErrorHandler_8h_1a6599a51289085a4b89fa152c0af3d591" kindref="member">SUTLErrorHandler</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/Shroon/Utils/ErrorHandler.h"/>
  </compounddef>
</doxygen>
